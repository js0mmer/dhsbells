{"version":3,"sources":["serviceWorker.js","schedules/evens.js","schedules/odds.js","schedules/weds.js","utils.js","components/Schedule.js","components/Home.js","components/Schedules.js","index.js"],"names":["Boolean","window","location","hostname","match","evens","periods","start","end","name","odds","weds","getScheduleFromDate","date","schedule","getDay","buildSchedule","s","header","react_default","a","createElement","id","html","i","length","push","convertTo12Hour","genRows","t","parseInt","substring","parseDate","input","parts","split","Date","Schedule","props","inPeriod","time","parseRawTime","inPassingPeriod","beforeSchool","replace","bottomMargin","marginBottom","Info","minutes","getMinutes","toString","getHours","rawTime","style","TodaysSchedule","components_Schedule","Home","Link","to","concat","process","Component","Day","suffix","d","getDate","startsWith","endsWith","getMonth","Schedules","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","handleChange","bind","assertThisInitialized","event","setState","target","type","onChange","React","ReactDOM","render","BrowserRouter","className","Route","path","exact","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.38a1fcb7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export default {\r\n  \"periods\": [\r\n    {\r\n      \"start\":\"7:50\",\r\n      \"end\":\"8:25\",\r\n      \"name\":\"0 Period\"\r\n    },\r\n    {\r\n      \"start\":\"8:30\",\r\n      \"end\":\"9:45\",\r\n      \"name\":\"2nd Period\"\r\n    },\r\n    {\r\n      \"start\":\"9:55\",\r\n      \"end\":\"11:10\",\r\n      \"name\":\"4th Period\"\r\n    },\r\n    {\r\n      \"start\":\"11:20\",\r\n      \"end\":\"12:35\",\r\n      \"name\":\"6th Period\"\r\n    },\r\n    {\r\n      \"start\":\"12:35\",\r\n      \"end\":\"13:10\",\r\n      \"name\":\"Lunch\"\r\n    },\r\n    {\r\n      \"start\":\"1:15\",\r\n      \"end\":\"1:50\",\r\n      \"name\":\"Dir. Intervention A\"\r\n    },\r\n    {\r\n      \"start\":\"1:55\",\r\n      \"end\":\"2:35\",\r\n      \"name\":\"Dir. Intervention B\"\r\n    }\r\n  ]\r\n}","export default {\r\n  \"periods\": [\r\n    {\r\n      \"start\":\"7:50\",\r\n      \"end\":\"8:25\",\r\n      \"name\":\"0 Period\"\r\n    },\r\n    {\r\n      \"start\":\"8:30\",\r\n      \"end\":\"9:45\",\r\n      \"name\":\"1st Period\"\r\n    },\r\n    {\r\n      \"start\":\"9:55\",\r\n      \"end\":\"11:10\",\r\n      \"name\":\"3rd Period\"\r\n    },\r\n    {\r\n      \"start\":\"11:20\",\r\n      \"end\":\"12:35\",\r\n      \"name\":\"5th Period\"\r\n    },\r\n    {\r\n      \"start\":\"12:35\",\r\n      \"end\":\"13:10\",\r\n      \"name\":\"Lunch\"\r\n    },\r\n    {\r\n      \"start\":\"13:15\",\r\n      \"end\":\"15:30\",\r\n      \"name\":\"7th Period\"\r\n    }\r\n  ]\r\n}\r\n","export default {\r\n  \"periods\": [\r\n    {\r\n      \"start\":\"9:05\",\r\n      \"end\":\"9:35\",\r\n      \"name\":\"Advisory\"\r\n    },\r\n    {\r\n      \"start\":\"10:00\",\r\n      \"end\":\"10:40\",\r\n      \"name\":\"Dir. Intervention\"\r\n    }\r\n  ]\r\n}","import React from 'react';\r\nimport evens from './schedules/evens';\r\nimport odds from './schedules/odds';\r\nimport weds from './schedules/weds';\r\n\r\nexport function getScheduleFromDate(date) {\r\n  if (date == null) return null;\r\n\r\n  var schedule;\r\n\r\n  switch(date.getDay()) {\r\n    case 1:\r\n    case 4:\r\n      schedule = evens;\r\n      break;\r\n    case 2:\r\n    case 5:\r\n      schedule = odds;\r\n      break;\r\n    case 3:\r\n      schedule = weds;\r\n      break;\r\n    default:\r\n      schedule = null;\r\n  }\r\n\r\n  return schedule;\r\n}\r\n\r\nexport function buildSchedule(s, header) {\r\n  if (s == null) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h3 id=\"schedule-header\">{header}</h3>\r\n        <table id=\"schedule\">\r\n          <thead>\r\n            <tr>\r\n              <th>Period</th>\r\n              <th>Start</th>\r\n              <th>End</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {genRows(s)}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction genRows(s) {\r\n  var html = [];\r\n  for (var i = 0; i < s.periods.length; i++) {\r\n    html.push(\r\n      <tr>\r\n        <td>{s.periods[i].name}</td>\r\n        <td>{convertTo12Hour(s.periods[i].start)}</td>\r\n        <td>{convertTo12Hour(s.periods[i].end)}</td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  return html;\r\n}\r\n\r\nexport function convertTo12Hour(t) {\r\n  if (t.length < 5) {\r\n    return t + \" AM\";\r\n  } else if (parseInt(t.substring(0, 2)) < 12) {\r\n    return t + \" AM\";\r\n  } else if (parseInt(t.substring(0, 2)) === 12) {\r\n    return t + \" PM\";\r\n  } else {\r\n    return (parseInt(t.substring(0, 2)) - 12) + t.substring(2, 5) + \" PM\";\r\n  }\r\n}\r\n\r\nexport function parseDate(input) {\r\n  if (input === '') return;\r\n\r\n  var parts = input.split('-');\r\n  return new Date(parts[0], parts[1]-1, parts[2]); // months are 0-11\r\n}","import React from 'react';\r\nimport { buildSchedule, getScheduleFromDate } from '../utils';\r\n\r\nfunction Schedule(props) {\r\n  if (props.date == null) return null;\r\n\r\n  var schedule = getScheduleFromDate(props.date);\r\n\r\n  if (schedule == null) {\r\n    return <h2>No School</h2>;\r\n  } else {\r\n    return buildSchedule(schedule);\r\n  }\r\n}\r\n\r\nexport default Schedule;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { convertTo12Hour, getScheduleFromDate } from '../utils';\r\nimport Schedule from './Schedule';\r\n\r\nconst inPeriod = (periods, i, time) => time >= parseRawTime(periods[i].start) && time < parseRawTime(periods[i].end);\r\n\r\nconst inPassingPeriod = (periods, i, time) => time >= parseRawTime(periods[i].end) && i < periods.length - 1 && time < parseRawTime(periods[i + 1].start);\r\n\r\nconst beforeSchool = (periods, time) => time < parseRawTime(periods[0].start);\r\n\r\nconst parseRawTime = (t) => parseInt(t.replace(\":\", \"\"));\r\n\r\nconst bottomMargin = {\r\n  marginBottom: '40px'\r\n}\r\n\r\nfunction Info() {\r\n  var date = new Date();\r\n  var time = rawTime(date);\r\n  var s = getScheduleFromDate(date);\r\n\r\n  if (s == null) return <h1>No Class</h1>;\r\n  \r\n  if (beforeSchool(s.periods, time)) {\r\n    return (\r\n      <div>\r\n        <h3>No Class</h3>\r\n        <h1>{s.periods[0].name} starts at {convertTo12Hour(s.periods[0].start)}</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  for (var i = 0; i < s.periods.length; i++) {\r\n    if (inPeriod(s.periods, i, time)) {\r\n      if (i < s.periods.length - 1) {\r\n        return (\r\n          <div>\r\n            <h3>{s.periods[i].name}</h3>\r\n            <h1>Ends at {convertTo12Hour(s.periods[i].end)}</h1>\r\n            <h3 style={bottomMargin}>Next: {s.periods[i + 1].name} {convertTo12Hour(s.periods[i + 1].start)} - {convertTo12Hour(s.periods[i + 1].end)}</h3>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div>\r\n            <h3>{s.periods[i].name}</h3>\r\n            <h1 style={bottomMargin}>Ends at {convertTo12Hour(s.periods[i].end)}</h1>\r\n          </div>\r\n        );\r\n      }\r\n    } else if (inPassingPeriod(s.periods, i, time)) {\r\n      return (\r\n        <div>\r\n          <h3>Transition Break</h3>\r\n          <h1>Ends at {convertTo12Hour(s.periods[i + 1].start)}</h1>\r\n          <h3 style={bottomMargin}>Next: {s.periods[i + 1].name} {convertTo12Hour(s.periods[i + 1].start)} - {convertTo12Hour(s.periods[i + 1].end)}</h3>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  return <h3>No Class</h3>;\r\n}\r\n\r\nfunction TodaysSchedule() {\r\n  var date = new Date();\r\n  var schedule = getScheduleFromDate(date);\r\n\r\n  if (schedule != null) {\r\n    return (\r\n      <div>\r\n        <h3>Today's Schedule</h3>\r\n        <Schedule date={date} />\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction rawTime(date) {\r\n  var minutes = date.getMinutes().toString();\r\n\r\n  if (minutes.length === 1) minutes = \"0\" + minutes;\r\n\r\n  return parseInt(date.getHours() + minutes);\r\n}\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Info />\r\n        <TodaysSchedule />\r\n        <Link to={`${process.env.PUBLIC_URL}/schedules`}>View all schedules</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Schedule from './Schedule';\r\nimport { parseDate } from '../utils';\r\n\r\nfunction Day(props) {\r\n  if (props.date == null) return null;\r\n\r\n  var date = props.date;\r\n  var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n  var months = ['January', 'February', 'March', 'April', 'May', 'June','July', 'August', 'September', 'October', 'November', 'December'];\r\n\r\n  var suffix = 'th';\r\n  var d = date.getDate().toString();\r\n  if (!d.startsWith('1')) {\r\n    if (d.endsWith('1')) {\r\n      suffix = 'st';\r\n    } else if (d.endsWith('2')) {\r\n      suffix = 'nd';\r\n    } else if (d.endsWith('3')) {\r\n      suffix = 'rd';\r\n    }\r\n  } else if (d === '1') {\r\n    suffix = 'st';\r\n  }\r\n\r\n  return <h2>{days[date.getDay()]} {months[date.getMonth()]} {d}{suffix}</h2>\r\n}\r\n\r\nclass Schedules extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: ''};\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Schedules</h1>\r\n        <input type='date' value={this.state.value} onChange={this.handleChange} />\r\n        <br />\r\n        <Day date={parseDate(this.state.value)} />\r\n        <Schedule date={parseDate(this.state.value)} />\r\n        <Link to={`${process.env.PUBLIC_URL}/`}>Back to Today's Schedule</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Schedules;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Home from './components/Home';\r\nimport Schedules from './components/Schedules';\r\nimport './style.css';\r\n\r\nconst AppRouter = () => (\r\n  <Router>\r\n    <div className=\"app\">\r\n      <Route path={`${process.env.PUBLIC_URL}/`} exact component={Home} />\r\n      <Route path={`${process.env.PUBLIC_URL}/schedules`} component={Schedules} />\r\n    </div>\r\n  </Router>\r\n);\r\n\r\nReactDOM.render(<AppRouter />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}